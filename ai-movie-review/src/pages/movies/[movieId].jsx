import { useRouter } from "next/router";
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import styles from "src/components/Main/Main.module.css";
import { Header } from "@/src/components/Header/Header";
import { NavMenu } from "@/src/components/NavMenu/NavMenu";
import { Footer } from "@/src/components/Footer/Footer";
import { Items } from "@/src/components/Items/Items";
// import { useCallback, useEffect, useState } from "react";

const categories = [
  { id: 28, name: "アクション" },
  { id: 12, name: "アドベンチャー" },
  { id: 16, name: "アニメーション" },
  { id: 35, name: "コメディ" },
  { id: 80, name: "犯罪" },
  { id: 99, name: "ドキュメンタリー" },
  { id: 18, name: "ドラマ" },
  { id: 10751, name: "ファミリー" },
  { id: 14, name: "ファンタジー" },
  { id: 36, name: "履歴" },
  { id: 27, name: "ホラー" },
  { id: 10402, name: "音楽" },
  { id: 9648, name: "謎" },
  { id: 10749, name: "ロマンス" },
  { id: 878, name: "サイエンスフィクション" },
  { id: 10770, name: "テレビ映画" },
  { id: 53, name: "スリラー" },
  { id: 10752, name: "戦争" },
  { id: 37, name: "西洋" },
];

const Show = (props) => {
  return (
    <>
      <Head>
        <title>映画検索</title>
        <meta charset="utf-8" />
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
        <link
          rel="stylesheet"
          type="text/css"
          href="http://mplus-fonts.sourceforge.jp/webfonts/general-j/mplus_webfonts.css"
        ></link>
      </Head>

      <div className={styles.container}>
        <Header handleMenu={props.handleMenu} open={props.open} />
        {props.open ? <NavMenu handleMenu={props.handleMenu} categories={categories} /> : null}
        <div>
          <ul className={styles.pcNavMenu}>
            {/* {genres.map((genre) => (
            <li>{genre.name}</li>
          ))} */}
            <Link href={"/popular"}>
              <li>最近の人気</li>
            </Link>
            <Link href={"/"}>
              <li>評価が高い映画</li>
            </Link>
            <li>上映中</li>
            <li>上映予定</li>
          </ul>
        </div>
        <div className={styles.title}>
          <p>- 映画詳細 -</p>
        </div>
        <main className={styles.main}>
          {props.movie ? (
            <div className={styles.box}>
              <div className={styles.left}>
                <div className={styles.image}>
                  <Image
                    src={"http://image.tmdb.org/t/p/w342" + `${props.movie.poster_path}`}
                    alt={`${props.movie.title}` + "のポスター"}
                    layout="fill"
                  />
                </div>
              </div>
              <div className={styles.right}>
                <p className={styles.movieTitle}>{props.movie.title}</p>
                <p className={styles.year}>{props.movie.release_date}</p>
                <p className={styles.movieDiscription}>{props.movie.overview}</p>
                <div className={styles.categories}>
                  {props.movie.genres.map((genre) => {
                    return (
                      <p className={styles.category} key={genre.id}>
                        {genre.name}
                      </p>
                    );
                  })}
                </div>
              </div>
            </div>
          ) : (
            <p>データがありません</p>
          )}
          {/* <div className={styles.box}></div> */}
          <Items />
        </main>
        <Footer />
      </div>
    </>
  );
};

export const getServerSideProps = async (context) => {
  const { movieId } = context.query;
  const src = `https://api.themoviedb.org/3/movie/${movieId}?api_key=54206ad48e363ded4ba03637e6c92d43&language=ja-JP`;
  try {
    const res = await fetch(src);
    if (!res.ok) {
      throw new Error("Failed to fetch movie data from API");
    }
    const movieData = await res.json();
    const movie = movieData || null;
    return {
      props: {
        movie,
      },
    };
  } catch (error) {
    console.error(error);
    return {
      props: {
        movie: null,
      },
    };
  }
};

export default Show;
